---
description: 
globs: product_api/**/*.py
alwaysApply: false
---
# API 開発ガイドライン

## 必須要件

1. 全てのエンドポイントに Pydantic モデルを使用
2. 適切な HTTP ステータスコードを返す
3. エラーレスポンスは統一されたフォーマットを使用
4. 各エンドポイントに対してテストを作成

## コーディング規約

- FastAPI のベストプラクティスに従う
- 型ヒントを必ず使用
- docstring でエンドポイントの説明を記述（日本語）
- 非同期処理が可能な場合は async/await を使用

## HTTP ステータスコード

- 200: 取得成功
- 201: 作成成功
- 404: リソースが見つからない
- 422: バリデーションエラー

## エラーレスポンス形式

```json
{
  "detail": "エラーメッセージ"
}
```

## セキュリティ

- 入力値は必ず検証する
- SQL インジェクション対策を実装
- 適切な認証・認可を実装（必要に応じて）

## プロジェクト構造

```
product_api/       # アプリケーションコード
├── __init__.py
├── main.py        # FastAPI アプリケーション
├── models.py      # Pydantic モデル
└── storage.py     # データストレージ
```

## パッケージ管理

- uv を使用してパッケージを管理
- pyproject.toml で依存関係を定義
- `uv add` コマンドで新しいパッケージを追加